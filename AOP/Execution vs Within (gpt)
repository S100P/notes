–ï—Å–ª–∏ —Ç–≤–æ–π `@Pointcut` —Ç–µ–ø–µ—Ä—å —Ç–∞–∫–æ–π:  

```java
@Pointcut("execution(* ru.s100p.storage.controller..*.*(..))")
public void controllerLog() {
}
```
—Ç–æ –æ–Ω **–ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –º–µ—Ç–æ–¥—ã (–ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞) –≤–æ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–∞—Ö –ø–∞–∫–µ—Ç–∞** `ru.s100p.storage.controller` **–∏ –µ–≥–æ –ø–æ–¥–ø–∞–∫–µ—Ç–æ–≤**.

---

## üéØ **–ö–∞–∫ —Ç–µ–ø–µ—Ä—å —É–∫–∞–∑—ã–≤–∞—Ç—å `@Pointcut` –≤ `@Before`, `@AfterThrowing`, `@AfterReturning`, `@Around`?**

–ê–±—Å–æ–ª—é—Ç–Ω–æ —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ ‚Äî **–∏—Å–ø–æ–ª—å–∑—É–µ–º `controllerLog()` —Å–æ —Å–∫–æ–±–∫–∞–º–∏**:

### **üìå –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ `@Aspect`**
```java
@Aspect
@Component
@Slf4j
public class LoggingAspect {

    // üîπ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ Pointcut: –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –≤—Å–µ –º–µ—Ç–æ–¥—ã –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
    @Pointcut("execution(* ru.s100p.storage.controller..*.*(..))")
    public void controllerLog() { }

    // üîπ –ü–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    @Before("controllerLog()")
    public void beforeControllerMethod(JoinPoint joinPoint) {
        log.info("–í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞: {}.{} —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ {}",
                joinPoint.getTarget().getClass().getSimpleName(),
                joinPoint.getSignature().getName(),
                Arrays.toString(joinPoint.getArgs()));
    }

    // üîπ –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–µ—Ç–æ–¥–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    @AfterReturning(pointcut = "controllerLog()", returning = "result")
    public void afterReturningControllerMethod(JoinPoint joinPoint, Object result) {
        log.info("–ú–µ—Ç–æ–¥ {}.{} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {}",
                joinPoint.getTarget().getClass().getSimpleName(),
                joinPoint.getSignature().getName(),
                result);
    }

    // üîπ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤ –º–µ—Ç–æ–¥–∞—Ö –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    @AfterThrowing(pointcut = "controllerLog()", throwing = "ex")
    public void afterThrowingControllerMethod(JoinPoint joinPoint, Exception ex) {
        log.error("–û—à–∏–±–∫–∞ –≤ –º–µ—Ç–æ–¥–µ {}.{}: {}",
                joinPoint.getTarget().getClass().getSimpleName(),
                joinPoint.getSignature().getName(),
                ex.getMessage());
    }

    // üîπ –í–æ–∫—Ä—É–≥ –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ (–¥–æ –∏ –ø–æ—Å–ª–µ)
    @Around("controllerLog()")
    public Object aroundControllerMethod(ProceedingJoinPoint joinPoint) throws Throwable {
        log.info("–ù–∞—á–∞–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–µ—Ç–æ–¥–∞: {}.{} —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ {}",
                joinPoint.getTarget().getClass().getSimpleName(),
                joinPoint.getSignature().getName(),
                Arrays.toString(joinPoint.getArgs()));

        Object result;
        try {
            result = joinPoint.proceed(); // –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
            log.info("–ú–µ—Ç–æ–¥ {}.{} –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {}",
                    joinPoint.getTarget().getClass().getSimpleName(),
                    joinPoint.getSignature().getName(),
                    result);
        } catch (Exception ex) {
            log.error("–û—à–∏–±–∫–∞ –≤ –º–µ—Ç–æ–¥–µ {}.{}: {}",
                    joinPoint.getTarget().getClass().getSimpleName(),
                    joinPoint.getSignature().getName(),
                    ex.getMessage());
            throw ex; // –ü—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
        }

        return result;
    }
}
```

---

## üî• **–í —á–µ–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É `execution` –∏ `within`?**
|  **`execution`**  |  **`within`**  |
|-------------------|---------------|
| **–ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –º–µ—Ç–æ–¥—ã**  | **–ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –í–°–ï (–º–µ—Ç–æ–¥—ã, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –≤—ã–∑–æ–≤—ã, –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –∫–ª–∞—Å—Å—ã)** |
| **–ú–æ–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Å–∏–≥–Ω–∞—Ç—É—Ä—É –º–µ—Ç–æ–¥–æ–≤** (`public/private`, `returnType`, `args`) | **–ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫ –∫–ª–∞—Å—Å–∞–º –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–∞–∫–µ—Ç–µ** |
| **–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —É—Ä–æ–≤–Ω–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è (`execution`)** | **–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —É—Ä–æ–≤–Ω–µ –∫–ª–∞—Å—Å–æ–≤ (`within`)** |
| **–ú–æ–∂–Ω–æ –±–æ–ª–µ–µ –≥–∏–±–∫–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å (`execution(* package..class.method(..))`)** | **–ß–∞—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –µ—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω—É–∂–Ω–æ –ø–æ–∫—Ä—ã—Ç—å –≤–µ—Å—å –ø–∞–∫–µ—Ç** |

---

## ‚úÖ **–í—ã–≤–æ–¥**
- **–ò—Å–ø–æ–ª—å–∑—É–π `controllerLog()` —Å–æ —Å–∫–æ–±–∫–∞–º–∏ –≤ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è—Ö `@Before`, `@AfterThrowing`, `@AfterReturning`, `@Around`.**
- **–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É `execution` –∏ `within`**:
  - `execution(..)` —Ç–æ—á–Ω–µ–µ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç **—É–∫–∞–∑–∞—Ç—å —Å–∏–≥–Ω–∞—Ç—É—Ä—ã –º–µ—Ç–æ–¥–æ–≤**.
  - `within(..)` –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç **–≤—Å–µ –∫–ª–∞—Å—Å—ã** –≤ –ø–∞–∫–µ—Ç–µ, –Ω–æ **–º–µ–Ω–µ–µ –≥–∏–±–∫–∏–π**.
- **–í—ã–±–æ—Ä `execution` ‚Äî –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ**, –µ—Å–ª–∏ —Ç–µ–±–µ –≤–∞–∂–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å **–º–µ—Ç–æ–¥—ã (–∞—Ä–≥—É–º–µ–Ω—Ç—ã, —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞, –≤–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è)**.  

–¢–µ–ø–µ—Ä—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –≤—Å–µ—Ö –º–µ—Ç–æ–¥–∞—Ö –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤! üöÄ
